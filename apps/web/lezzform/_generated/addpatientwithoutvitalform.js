import { z as a } from "zod";
import {
  Lezzform as p,
  FormField as t,
  FormItem as l,
  FormLabel as m,
  FormControl as s,
  FormMessage as u,
  Input as h,
  Dropdown as C,
  DatePicker as S,
  PhoneNumberInput as k,
  TextArea as A,
  TwoColumn as B,
  Button as g,
} from "@lezzform/react";
import {
  CreditCard as z,
  User as N,
  Calendar as I,
  Phone as P,
} from "lucide-react";
import * as c from "react";
import { jsx as e, jsxs as n } from "react/jsx-runtime";
var q = a.object({
    medicalNumber: a.string().optional(),
    nik: a.string(),
    fullname: a.string(),
    sex: a.string(),
    blood: a.string(),
    birthAt: a.date(),
    phone: a
      .string()
      .max(14)
      .min(10)
      .refine(
        (i) =>
          !i ||
          /^([+]?[\s0-9]+)?(\d{3}|[(]?[0-9]+[)])?([-]?[\s]?[0-9])+$/.test(i),
        { message: "Invalid phone number format" },
      ),
    address: a.string(),
  }),
  R = "9pyrvphD107ipoXImiwd",
  O = ({
    onSubmit: i,
    onError: F,
    onSuccess: y,
    defaultValues: v,
    onAction: d,
    formProps: w,
  }) => {
    let b = c.useRef();
    c.useEffect(() => {
      i && (b.current = i);
    }, [i]);
    let L = c.useCallback(async (r, o) => {
      if (b.current) return b.current(r, o);
    }, []);
    return e(
      p,
      {
        id: R,
        defaultValues: v,
        onSubmit: L,
        onError: F,
        onSuccess: y,
        zodSchema: q,
        mode: "onSubmit",
        children: (r) =>
          n(p.Container, {
            children: [
              e(t, {
                control: r.control,
                name: "medicalNumber",
                disabled: !0,
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { children: "Nomor Rekam Medis" }),
                      e(s, {
                        children: e(h, {
                          label: "Nomor Rekam Medis",
                          name: o.name,
                          value: o.value ?? "",
                          onBlur: o.onBlur,
                          onChange: o.onChange,
                          placeholder: "Generated By System",
                          disabled: o.disabled,
                          styles: { root: {} },
                          prefixAdornment: {
                            icon: e(z, { size: 18, color: "#000000" }),
                          },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              e(t, {
                control: r.control,
                name: "nik",
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { isRequired: !0, children: "NIK" }),
                      e(s, {
                        children: e(h, {
                          label: "NIK",
                          name: o.name,
                          value: o.value ?? "",
                          onBlur: o.onBlur,
                          onChange: o.onChange,
                          placeholder: "NIK",
                          disabled: o.disabled,
                          isRequired: !0,
                          styles: { root: {} },
                          prefixAdornment: {
                            icon: e(z, { size: 18, color: "#000000" }),
                          },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              e(t, {
                control: r.control,
                name: "fullname",
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { isRequired: !0, children: "Nama" }),
                      e(s, {
                        children: e(h, {
                          label: "Nama",
                          name: o.name,
                          value: o.value ?? "",
                          onBlur: o.onBlur,
                          onChange: o.onChange,
                          placeholder: "Nama",
                          disabled: o.disabled,
                          isRequired: !0,
                          styles: { root: {} },
                          prefixAdornment: {
                            icon: e(N, { size: 18, color: "#000000" }),
                          },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              e(t, {
                control: r.control,
                name: "sex",
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { isRequired: !0, children: "Jenis Kelamin" }),
                      e(s, {
                        children: e(C.List, {
                          label: "Jenis Kelamin",
                          name: o.name,
                          value: o.value,
                          onChange: o.onChange,
                          items: [
                            { label: "Laki-laki", value: "male" },
                            { label: "Perempuan", value: "female" },
                          ],
                          isRequired: !0,
                          disabled: o.disabled,
                          styles: { root: {} },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              e(t, {
                control: r.control,
                name: "blood",
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { isRequired: !0, children: "Golongan Darah" }),
                      e(s, {
                        children: e(C.List, {
                          label: "Golongan Darah",
                          name: o.name,
                          value: o.value,
                          onChange: o.onChange,
                          items: [
                            { label: "empty", value: "N/A" },
                            { label: "A", value: "a" },
                            { label: "B", value: "b" },
                            { label: "AB", value: "ab" },
                            { label: "O", value: "o" },
                          ],
                          isRequired: !0,
                          disabled: o.disabled,
                          styles: { root: {} },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              e(t, {
                control: r.control,
                name: "birthAt",
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { isRequired: !0, children: "Tanggal Lahir" }),
                      e(s, {
                        children: e(S, {
                          label: "Tanggal Lahir",
                          name: o.name,
                          value: o.value,
                          onChange: o.onChange,
                          placeholder: "dd/mm/yyyy",
                          format: "PPP",
                          isRequired: !0,
                          styles: { root: {} },
                          disabled: o.disabled,
                          prefixAdornment: {
                            icon: e(I, { size: 18, color: "#000000" }),
                          },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              e(t, {
                control: r.control,
                name: "phone",
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { isRequired: !0, children: "Nomor Telepon" }),
                      e(s, {
                        children: e(k, {
                          label: "Nomor Telepon",
                          name: o.name,
                          value: o.value ?? "",
                          onBlur: o.onBlur,
                          onChange: o.onChange,
                          disabled: o.disabled,
                          placeholder: "Nomor Telepon",
                          isRequired: !0,
                          styles: { root: {} },
                          prefixAdornment: {
                            icon: e(P, { size: 18, color: "#000000" }),
                          },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              e(t, {
                control: r.control,
                name: "address",
                render: ({ field: o }) =>
                  n(l, {
                    children: [
                      e(m, { isRequired: !0, children: "Alamat" }),
                      e(s, {
                        children: e(A, {
                          label: "Alamat",
                          name: o.name,
                          value: o.value ?? "",
                          onBlur: o.onBlur,
                          onChange: o.onChange,
                          disabled: o.disabled,
                          placeholder: "Alamat",
                          isRequired: !0,
                          styles: { root: {} },
                        }),
                      }),
                      e(u, {}),
                    ],
                  }),
              }),
              n(B, {
                styles: { root: {} },
                children: [
                  e(g, {
                    type: "button",
                    className: "w-full",
                    onClick: () => {
                      d?.["button-1713924193321"] &&
                        d?.["button-1713924193321"](r);
                    },
                    styles: { root: { backgroundColor: "rgb(239, 68, 68)" } },
                    children: "Batalkan",
                  }),
                  e(g, {
                    type: "button",
                    className: "w-full",
                    onClick: () => {
                      d?.["button-1713924197611"] &&
                        d?.["button-1713924197611"](r);
                    },
                    styles: { root: { backgroundColor: "#2E584F" } },
                    children: "Daftar",
                  }),
                ],
              }),
            ],
          }),
      },
      R,
    );
  };
export { O as Form };
